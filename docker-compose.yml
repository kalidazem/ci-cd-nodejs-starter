version: '3'

services:
  app:
    build:
      context: ./api
    image: ${IMAGE_APP_NAME}
    command: npm run start
    depends_on:
      - mongo
      - redis
    expose:
      - "3000"
    env_file:
    - ./.env
    networks:
    - app-net


   
  web:
    build:
      context: ./web
    image: ${IMAGE_WEB_NAME}
    env_file:
      - ./web/.env
    expose:
      - "4000"
    depends_on:
      - mongo
      - redis
    networks:
      - app-net
    command: node build
  
  mongo:
    image: mongo:6.0.13
    restart: always
    env_file:
      - .env
    volumes:
      - mongo-data:/data/db
      - mongodb_config:/data/configdb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - app-net
 
  redis:
    image: redis:7.2-alpine
    env_file:
      - .env
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    restart: always
    networks:
      - app-net


  nginx:
    image: nginx:alpine
    container_name: reverse-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
      - web
    networks:
      - app-net

volumes:
  mongo-data:
  mongodb_config:

networks:
  app-net:
    driver: bridge